design_activity_tasks:
  description: >
    **🔄 이전 작업 컨텍스트:**
    {previous_context}
    
    **📋 현재 액티비티:** "{topic}"

    먼저 이전 단계들의 작업 내용 및 결과에서 본질적인 목적과 요구사항, 중간 결과, 흐름을 중점으로 문맥을 파악하여, 현재 액티비티 '{topic}'에서 구체적으로 무엇을 해야 하는지 파악하세요.

    
    **0단계: 컨텍스트 분석 및 요구사항 파악**
    1. **이전 컨텍스트 해석**
       - 이전 단계들에서 수행된 주요 작업들, 결과, 요구사항, 목적을 분석하여 문맥 흐름을 파악하고 현재 액티비티에 어떻게 활용할지 판단
       - 전달된 데이터, 요구사항, 결정사항들을 확인하고 현재 액티비티에 어떻게 활용할지 판단
       - 미완료되었거나 다음 단계로 넘어간 사항들을 확인하고 현재 액티비티에 어떻게 활용할지 판단
       - 이전 단계에서 제기된 이슈나 고려사항들을 확인하고 현재 액티비티에 어떻게 활용할지 판단
       - 요구사항 및 피드백에 맞게 수정이 필요한 사항들을 확인하고 현재 액티비티에 어떻게 활용할지 판단
       (예: 이전 컨텍스트에 요구사항과 피드백이 있고, 결과 또한 있을 경우, 만약 현재 액티비티가 보완 및 수정과 관련된 작업이라면, 이전 컨텍스트를 활용하여 결과 자체를 보완 및 수정)
       (예: 만약, 이전 컨텍스트에 필요한 정보들이 다 있으며, 현재 액티비티가 최종 결정과 관련된 작업이라면, 이전 컨텍스트 내용을 최대한 활용하여 목적과 요구사항에 맞는 최종 결과물을 생성)

    2. **현재 액티비티 특성 파악**
       - 액티비티의 일반적인 목적과 수행 방법
        1. 초안 및 제안서를 생성하는 작업인 경우, 이전 컨텍스트에서 목적과 요구사항을 기반으로 작성
        2. 수정 및 피드백을 받는 작업인 경우, 이전 컨텍스트에서 결과물을 분석하여 수정 및 피드백 내용을 작성
        3. 보완 및 수정된 결과물을 생성하는 작업인 경우, 이전 컨텍스트에서 목적, 요구사항, 초기 결과물을 기반으로 결과물을 수정하여 보완 및 수정된 결과물을 생성
        4. 최종 결정을 내리는 작업인 경우, 이전 컨텍스트에서 목적, 요구사항, 초기 결과물, 보완된 결과물을 기반으로 최종 결과물을 작성 
        5. 이전 컨텍스트를 분석하여 나온 흐름 및 문맥을 잊어서는 안되며, 최초 및 이전 단계에 무슨 목적 및 요구사항을 했는지를 중점으로 둬야함 즉, 현재 액티비티에 국한되면 안됨
        (예 : 요구사항 및 목적이 "해외여행 안전 가이드를 작성" 이고 현재 액티비티가 수정 및 보완 단계라면, 수정 및 보완관련 내용만 담아선 안되고, 실제 수정된 이전 요구사항 및 목적을 만족하는 내용 자체가 있어야함)
        (예 : 요구사항 및 목적이 "해외여행 안전 가이드를 작성" 이고, 현재 액티비티가 최종 제출 단계라면, 최종 제출관련 내용만 담아선 안되고, 실제 최종 제출될 이전 요구사항 및 목적을 만족하는 내용 자체가 있어야함)
        (예 : 즉, 요구사항이자 목적인 "해외여행 안전 가이드"라는 내용 자체를 계속 유지를 해야합니다. 다른 내용이 들어가서는 안됨)
    
    **1단계: 목차(TOC) 구조 설계**
     - 이전 컨텍스트를 분석하여 나온 흐름을 바탕으로 5-8개의 핵심 섹션으로 목차 구성
     - 각 섹션은 명확한 목적과 결과물을 가져야 함
     - 섹션들 간의 논리적 순서와 연관성 고려 (서론 → 본론들 → 결론)
    
    **2단계: 에이전트 매칭 (핵심!)**
      사용 가능한 에이전트 목록: {available_agents}
    
      각 섹션별로 다음 기준을 적용하여 최적의 에이전트 선택:
     - **전문성 매칭**: 에이전트의 role/goal이 섹션 주제와 얼마나 관련있는지
     - **경험적 적합성**: 에이전트의 persona에서 해당 분야 경험/지식 확인
     - **액티비티 특성 이해**: 현재 액티비티의 특성을 이해하고 수행할 수 있는지
     - **컨텍스트 활용 능력**: 이전 단계의 결과를 효과적으로 활용할 수 있는지
    
    **3단계: 전문화된 Task 설계**
     매칭된 각 에이전트별로 다음을 포함한 task 작성:
     - 이전 컨텍스트를 분석하여 나온 흐름을 바탕으로 구체적 지시
     - 이전 컨텍스트를 분석하여 나온 흐름을 바탕으로 해당 섹션에서 다뤄야 할 핵심 포인트 명시
     - 에이전트의 전문성을 최대한 활용하는 접근법 제시
     - Markdown 형식 준수 및 구조화된 콘텐츠 요구
     - 실무적이고 실용적인 정보 포함 지시
  expected_output: >
    반드시 다음 형식의 JSON 배열을 정확히 출력하세요:
    [
      {
        "toc": {
           "title": "명확하고 구체적인 섹션 제목 (이전 컨텍스트의 흐름을 반영한 제목)",
           "description": "해당 섹션에서 다룰 구체적인 내용과 범위 (2-3문장으로 상세 설명)"
         },
        "agent": {
          "name": "available_agents에서 선택한 에이전트의 정확한 name",
          "role": "선택한 에이전트의 정확한 role",
          "goal": "선택한 에이전트의 정확한 goal", 
          "persona": "선택한 에이전트의 정확한 persona",
          "tool_names": "선택한 에이전트의 정확한 tool_names (배열 형태로)",
          "match_reason": "왜 이 에이전트가 이 섹션과 가장 적합한지 구체적인 이유 (전문성, 경험, 능력 기준으로 2-3문장)"
        },
        "task": {
           "description": "이전 컨텍스트를 분석하여 나온 흐름을 바탕으로, '{섹션제목}' 섹션을 작성하세요. **주요 작성 기준**: 1) 원래 고객 요구사항과 목적을 최우선으로 다루기, 2) 이전 단계에서 얻은 피드백이 있다면 내용에 적용하기, 3) 에이전트의 전문성을 최대한 발휘한 실무적 접근법 제시, 4) 구체적인 사례와 실행 가능한 솔루션 포함. Markdown 형식(## 제목, ### 소제목, **강조**, - 리스트)으로 구조화하여 작성할 것.",
           "expected_output": "이전 컨텍스트를 분석하여 나온 흐름을 바탕으로, Markdown 형식의 전문적이고 실용적인 섹션 내용 (2000-3000단어). 원래 요구사항을 충족하는 것을 최우선. ## 주제명, ### 하위주제, **핵심용어 강조**, - 항목별 리스트, 실무 예시와 구체적 가이드라인 포함. 독자가 바로 활용할 수 있는 수준의 디테일한 정보 제공."
         }
      }
    ]
    
    **중요 지침:**
     - 반드시 5-7개의 섹션으로 구성 (이전 컨텍스트를 분석하여 나온 흐름을 바탕으로 TOC를 선정)
     - 각 섹션마다 가장 적합한 에이전트를 배정
     - 섹션 순서는 이전 컨텍스트를 바탕으로 한 논리적 흐름을 따름
     - 이전 컨텍스트와의 연결성을 명확히 드러내는 TOC 구성
     - JSON 형식을 정확히 준수 (쉼표, 따옴표, 대괄호 확인)
     - 한국어로 작성하되 전문 용어는 적절히 사용
  agent: toc_generator_and_agent_matcher 